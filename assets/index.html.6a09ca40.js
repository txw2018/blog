import{c as n}from"./app.b0bc7c80.js";import{_ as s}from"./plugin-vue_export-helper.21dcd24c.js";const a={},p=n(`<h1 id="typescript" tabindex="-1"><a class="header-anchor" href="#typescript" aria-hidden="true">#</a> TypeScript</h1><h2 id="\u57FA\u7840" tabindex="-1"><a class="header-anchor" href="#\u57FA\u7840" aria-hidden="true">#</a> \u57FA\u7840</h2><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">let</span> age<span class="token operator">:</span><span class="token builtin">number</span> <span class="token operator">=</span> <span class="token number">23</span>

<span class="token keyword">let</span> name<span class="token operator">:</span><span class="token builtin">string</span> <span class="token operator">=</span> <span class="token string">&#39;tangxianwen&#39;</span>

<span class="token keyword">let</span> isTrue<span class="token operator">:</span><span class="token builtin">boolean</span> <span class="token operator">=</span> <span class="token boolean">true</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="\u6570\u7EC4" tabindex="-1"><a class="header-anchor" href="#\u6570\u7EC4" aria-hidden="true">#</a> \u6570\u7EC4</h3><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">let</span> list<span class="token operator">:</span><span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;\u82F9\u679C&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;\u68A8\u5B50&#39;</span><span class="token punctuation">]</span>
<span class="token comment">//\u6216\u8005</span>
<span class="token keyword">let</span> numbers<span class="token operator">:</span><span class="token builtin">Array</span><span class="token operator">&lt;</span><span class="token builtin">number</span><span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="any-\u8868\u793A\u4EFB\u610F\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#any-\u8868\u793A\u4EFB\u610F\u7C7B\u578B" aria-hidden="true">#</a> any \u8868\u793A\u4EFB\u610F\u7C7B\u578B</h3><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">let</span> obj<span class="token operator">:</span><span class="token builtin">any</span> <span class="token operator">=</span> <span class="token punctuation">{</span>a<span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h3 id="noimplicitany" tabindex="-1"><a class="header-anchor" href="#noimplicitany" aria-hidden="true">#</a> noImplicitAny</h3><p>\u4F60\u53EF\u4EE5\u5F00\u542F\u7F16\u8BD1\u9879 noImplicitAny\uFF0C\u5F53\u88AB\u9690\u5F0F\u63A8\u65AD\u4E3A any \u65F6\uFF0CTypeScipt \u5C31\u4F1A\u62A5\u9519</p><h3 id="\u51FD\u6570" tabindex="-1"><a class="header-anchor" href="#\u51FD\u6570" aria-hidden="true">#</a> \u51FD\u6570</h3><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">greet</span><span class="token punctuation">(</span>name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span><span class="token builtin">string</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token string">&quot;Hello, &quot;</span> <span class="token operator">+</span> name<span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;!!&quot;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="\u533F\u540D\u51FD\u6570" tabindex="-1"><a class="header-anchor" href="#\u533F\u540D\u51FD\u6570" aria-hidden="true">#</a> \u533F\u540D\u51FD\u6570</h3><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> names <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&quot;Alice&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Bob&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Eve&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
names<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span><span class="token function">toUppercase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h3 id="\u5BF9\u8C61\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#\u5BF9\u8C61\u7C7B\u578B" aria-hidden="true">#</a> \u5BF9\u8C61\u7C7B\u578B</h3><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">printCoord</span><span class="token punctuation">(</span>pt<span class="token operator">:</span><span class="token punctuation">{</span>x<span class="token operator">:</span><span class="token builtin">number</span><span class="token punctuation">;</span>y<span class="token operator">:</span><span class="token builtin">number</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;the coordinates x value is&#39;</span><span class="token operator">+</span>pt<span class="token punctuation">.</span>x<span class="token punctuation">)</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;the coordinates y value is&#39;</span><span class="token operator">+</span>pt<span class="token punctuation">.</span>y<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token function">printCoord</span><span class="token punctuation">(</span><span class="token punctuation">{</span>x<span class="token operator">:</span><span class="token number">3</span><span class="token punctuation">,</span>y<span class="token operator">:</span><span class="token number">7</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="\u53EF\u9009\u5C5E\u6027" tabindex="-1"><a class="header-anchor" href="#\u53EF\u9009\u5C5E\u6027" aria-hidden="true">#</a> \u53EF\u9009\u5C5E\u6027</h3><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">printName</span><span class="token punctuation">(</span>obj<span class="token operator">:</span><span class="token punctuation">{</span>first<span class="token operator">:</span><span class="token builtin">string</span><span class="token punctuation">;</span>last<span class="token operator">?</span><span class="token operator">:</span><span class="token builtin">string</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>obj<span class="token punctuation">.</span>last <span class="token operator">!==</span> <span class="token keyword">undefined</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj<span class="token punctuation">.</span>last<span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token comment">//\u6216\u8005\u4F7F\u7528\u53EF\u9009\u8FDE</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj<span class="token punctuation">.</span>last<span class="token operator">?.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h3 id="\u8054\u5408\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#\u8054\u5408\u7C7B\u578B" aria-hidden="true">#</a> \u8054\u5408\u7C7B\u578B</h3><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">printId</span><span class="token punctuation">(</span>id<span class="token operator">:</span><span class="token builtin">number</span><span class="token operator">|</span><span class="token builtin">string</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;your id is&#39;</span> <span class="token operator">+</span> id<span class="token punctuation">)</span>

    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> id <span class="token operator">===</span> <span class="token string">&#39;string&#39;</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>id<span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token function">printId</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
<span class="token function">printId</span><span class="token punctuation">(</span><span class="token string">&#39;1&#39;</span><span class="token punctuation">)</span>

<span class="token keyword">function</span>  <span class="token function">welcomePeople</span><span class="token punctuation">(</span>x<span class="token operator">:</span><span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">|</span><span class="token builtin">string</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token builtin">Array</span><span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>x<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&#39;and&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><h3 id="\u7C7B\u578B\u522B\u540D" tabindex="-1"><a class="header-anchor" href="#\u7C7B\u578B\u522B\u540D" aria-hidden="true">#</a> \u7C7B\u578B\u522B\u540D</h3><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">Point</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    x<span class="token operator">:</span><span class="token builtin">number</span><span class="token punctuation">;</span>
    y<span class="token operator">:</span><span class="token builtin">number</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">ID</span></span> <span class="token operator">=</span> <span class="token builtin">number</span> <span class="token operator">|</span> <span class="token builtin">string</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h3 id="\u63A5\u53E3" tabindex="-1"><a class="header-anchor" href="#\u63A5\u53E3" aria-hidden="true">#</a> \u63A5\u53E3</h3><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">Point</span> <span class="token punctuation">{</span>
   x<span class="token operator">:</span><span class="token builtin">number</span><span class="token punctuation">;</span>
   y<span class="token operator">:</span><span class="token builtin">number</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>\u7C7B\u578B\u522B\u540D\u4E0E\u63A5\u53E3\u7684\u4E0D\u540C \u7C7B\u578B\u522B\u540D\u548C\u63A5\u53E3\u975E\u5E38\u76F8\u4F3C\uFF0C\u5927\u90E8\u5206\u65F6\u5019\uFF0C\u4F60\u53EF\u4EE5\u4EFB\u610F\u9009\u62E9\u4F7F\u7528\u3002\u63A5\u53E3\u7684\u51E0\u4E4E\u6240\u6709\u7279\u6027\u90FD\u53EF\u4EE5\u5728 type \u4E2D\u4F7F\u7528\uFF0C\u4E24\u8005\u6700\u5173\u952E\u7684\u5DEE\u522B\u5728\u4E8E\u7C7B\u578B\u522B\u540D\u672C\u8EAB\u65E0\u6CD5\u6DFB\u52A0\u65B0\u7684\u5C5E\u6027\uFF0C\u800C\u63A5\u53E3\u662F\u53EF\u4EE5\u6269\u5C55\u7684</p><h3 id="interface" tabindex="-1"><a class="header-anchor" href="#interface" aria-hidden="true">#</a> Interface</h3><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// \u901A\u8FC7\u7EE7\u627F\u6269\u5C55\u7C7B\u578B</span>
<span class="token keyword">interface</span> <span class="token class-name">Animal</span> <span class="token punctuation">{</span>
    name<span class="token operator">:</span> <span class="token builtin">string</span>
<span class="token punctuation">}</span>

<span class="token keyword">interface</span> <span class="token class-name">Bear</span> <span class="token keyword">extends</span> <span class="token class-name">Animal</span> <span class="token punctuation">{</span>
    honey<span class="token operator">:</span> <span class="token builtin">boolean</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> bear <span class="token operator">=</span> <span class="token function">getBear</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
bear<span class="token punctuation">.</span>name
bear<span class="token punctuation">.</span>honey

 <span class="token comment">//Type</span>

<span class="token comment">// \u901A\u8FC7\u4EA4\u96C6\u6269\u5C55\u7C7B\u578B</span>
<span class="token keyword">type</span> <span class="token class-name">Animal</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    name<span class="token operator">:</span> <span class="token builtin">string</span>
<span class="token punctuation">}</span>

<span class="token keyword">type</span> <span class="token class-name">Bear</span> <span class="token operator">=</span> Animal <span class="token operator">&amp;</span> <span class="token punctuation">{</span>
    honey<span class="token operator">:</span> <span class="token builtin">boolean</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> bear <span class="token operator">=</span> <span class="token function">getBear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
bear<span class="token punctuation">.</span>name<span class="token punctuation">;</span>
bear<span class="token punctuation">.</span>honey<span class="token punctuation">;</span>

</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br></div></div><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// Interface</span>
<span class="token comment">// \u5BF9\u4E00\u4E2A\u5DF2\u7ECF\u5B58\u5728\u7684\u63A5\u53E3\u6DFB\u52A0\u65B0\u7684\u5B57\u6BB5</span>
<span class="token keyword">interface</span> <span class="token class-name">Window</span> <span class="token punctuation">{</span>
    title<span class="token operator">:</span> <span class="token builtin">string</span>
<span class="token punctuation">}</span>

<span class="token keyword">interface</span> <span class="token class-name">Window</span> <span class="token punctuation">{</span>
    ts<span class="token operator">:</span> TypeScriptAPI
<span class="token punctuation">}</span>

<span class="token keyword">const</span> src <span class="token operator">=</span> <span class="token string">&#39;const a = &quot;Hello World&quot;&#39;</span><span class="token punctuation">;</span>
window<span class="token punctuation">.</span>ts<span class="token punctuation">.</span><span class="token function">transpileModule</span><span class="token punctuation">(</span>src<span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Type</span>
<span class="token comment">// \u521B\u5EFA\u540E\u4E0D\u80FD\u88AB\u6539\u53D8</span>
<span class="token keyword">type</span> <span class="token class-name">Window</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    title<span class="token operator">:</span> <span class="token builtin">string</span>
<span class="token punctuation">}</span>

<span class="token keyword">type</span> <span class="token class-name">Window</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    ts<span class="token operator">:</span> TypeScriptAPI
<span class="token punctuation">}</span>

<span class="token comment">// Error: Duplicate identifier &#39;Window&#39;.</span>

</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br></div></div><h3 id="\u7C7B\u578B\u65AD\u8A00" tabindex="-1"><a class="header-anchor" href="#\u7C7B\u578B\u65AD\u8A00" aria-hidden="true">#</a> \u7C7B\u578B\u65AD\u8A00</h3><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">//\u4F60\u53EF\u4EE5\u4F7F\u7528\u7C7B\u578B\u65AD\u8A00\u5C06\u5176\u6307\u5B9A\u4E3A\u4E00\u4E2A\u66F4\u5177\u4F53\u7684\u7C7B\u578B\uFF1A</span>
<span class="token keyword">const</span> myCanvas <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&quot;main_canvas&quot;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> HTMLCanvasElement<span class="token punctuation">;</span>
<span class="token comment">//\u6216\u8005</span>
<span class="token keyword">const</span> myCanvas2 <span class="token operator">=</span> <span class="token operator">&lt;</span>HTMLCanvasElement<span class="token operator">&gt;</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&quot;main_canvas&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//\u53CC\u91CD\u65AD\u8A00 \u5F53\u4F60\u4E0D\u80FD\u76F4\u63A5\u65AD\u8A00\u6210\u67D0\u79CD\u7C7B\u578B\u65F6</span>
<span class="token keyword">function</span> <span class="token function">handler</span><span class="token punctuation">(</span>event<span class="token operator">:</span> Event<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> element <span class="token operator">=</span> <span class="token punctuation">(</span>event <span class="token keyword">as</span> <span class="token builtin">any</span><span class="token punctuation">)</span> <span class="token keyword">as</span> HTMLElement<span class="token punctuation">;</span> <span class="token comment">// ok</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h3 id="\u5B57\u9762\u91CF\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#\u5B57\u9762\u91CF\u7C7B\u578B" aria-hidden="true">#</a> \u5B57\u9762\u91CF\u7C7B\u578B</h3><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">let</span> x<span class="token operator">:</span> <span class="token string">&quot;hello&quot;</span> <span class="token operator">=</span> <span class="token string">&quot;hello&quot;</span><span class="token punctuation">;</span>
<span class="token comment">// OK</span>
x <span class="token operator">=</span> <span class="token string">&quot;hello&quot;</span><span class="token punctuation">;</span>
<span class="token comment">// ...</span>
x <span class="token operator">=</span> <span class="token string">&quot;howdy&quot;</span><span class="token punctuation">;</span>
<span class="token comment">// Type &#39;&quot;howdy&quot;&#39; is not assignable to type &#39;&quot;hello&quot;&#39;.</span>

<span class="token keyword">function</span> <span class="token function">printText</span><span class="token punctuation">(</span>s<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> alignment<span class="token operator">:</span> <span class="token string">&quot;left&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;right&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;center&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// ...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h3 id="\u5B57\u9762\u91CF\u63A8\u65AD" tabindex="-1"><a class="header-anchor" href="#\u5B57\u9762\u91CF\u63A8\u65AD" aria-hidden="true">#</a> \u5B57\u9762\u91CF\u63A8\u65AD</h3><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">declare</span> <span class="token keyword">function</span> <span class="token function">handleRequest</span><span class="token punctuation">(</span>url<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> method<span class="token operator">:</span> <span class="token string">&quot;GET&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;POST&quot;</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> req <span class="token operator">=</span> <span class="token punctuation">{</span> url<span class="token operator">:</span> <span class="token string">&quot;https://example.com&quot;</span><span class="token punctuation">,</span> method<span class="token operator">:</span> <span class="token string">&quot;GET&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token function">handleRequest</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span>url<span class="token punctuation">,</span> req<span class="token punctuation">.</span>method<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Argument of type &#39;string&#39; is not assignable to parameter of type &#39;&quot;GET&quot; | &quot;POST&quot;&#39;.</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>\u5728\u4E0A\u9762\u8FD9\u4E2A\u4F8B\u5B50\u91CC\uFF0Creq.method \u88AB\u63A8\u65AD\u4E3A string \uFF0C\u800C\u4E0D\u662F &quot;GET&quot;\uFF0C\u56E0\u4E3A\u5728\u521B\u5EFA req \u548C \u8C03\u7528 handleRequest \u51FD\u6570\u4E4B\u95F4\uFF0C\u53EF\u80FD\u8FD8\u6709\u5176\u4ED6\u7684\u4EE3\u7801\uFF0C\u6216\u8BB8\u4F1A\u5C06 req.method \u8D4B\u503C\u4E00\u4E2A\u65B0\u5B57\u7B26\u4E32\u6BD4\u5982 &quot;Guess&quot; \u3002\u6240\u4EE5 TypeScript \u5C31\u62A5\u9519\u4E86\u3002</p><ol><li>\u6DFB\u52A0\u4E00\u4E2A\u7C7B\u578B\u65AD\u8A00\u6539\u53D8\u63A8\u65AD\u7ED3\u679C</li></ol><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// Change 1:</span>
<span class="token keyword">const</span> req <span class="token operator">=</span> <span class="token punctuation">{</span> url<span class="token operator">:</span> <span class="token string">&quot;https://example.com&quot;</span><span class="token punctuation">,</span> method<span class="token operator">:</span> <span class="token string">&quot;GET&quot;</span> <span class="token keyword">as</span> <span class="token string">&quot;GET&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token comment">// Change 2</span>
<span class="token function">handleRequest</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span>url<span class="token punctuation">,</span> req<span class="token punctuation">.</span>method <span class="token keyword">as</span> <span class="token string">&quot;GET&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>2.\u4F60\u4E5F\u53EF\u4EE5\u4F7F\u7528 as const \u628A\u6574\u4E2A\u5BF9\u8C61\u8F6C\u4E3A\u4E00\u4E2A\u7C7B\u578B\u5B57\u9762\u91CF\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> req <span class="token operator">=</span> <span class="token punctuation">{</span> url<span class="token operator">:</span> <span class="token string">&quot;https://example.com&quot;</span><span class="token punctuation">,</span> method<span class="token operator">:</span> <span class="token string">&quot;GET&quot;</span> <span class="token punctuation">}</span> <span class="token keyword">as</span> <span class="token keyword">const</span><span class="token punctuation">;</span>
<span class="token function">handleRequest</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span>url<span class="token punctuation">,</span> req<span class="token punctuation">.</span>method<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>as const \u6548\u679C\u8DDF const \u7C7B\u4F3C\uFF0C\u4F46\u662F\u5BF9\u7C7B\u578B\u7CFB\u7EDF\u800C\u8A00\uFF0C\u5B83\u53EF\u4EE5\u786E\u4FDD\u6240\u6709\u7684\u5C5E\u6027\u90FD\u88AB\u8D4B\u4E88\u4E00\u4E2A\u5B57\u9762\u91CF\u7C7B\u578B\uFF0C\u800C\u4E0D\u662F\u4E00\u4E2A\u66F4\u901A\u7528\u7684\u7C7B\u578B\u6BD4\u5982 string \u6216\u8005 number \u3002</p><h3 id="null\u548Cundefined" tabindex="-1"><a class="header-anchor" href="#null\u548Cundefined" aria-hidden="true">#</a> null\u548Cundefined</h3><p>JavaScript \u6709\u4E24\u4E2A\u539F\u59CB\u7C7B\u578B\u7684\u503C\uFF0C\u7528\u4E8E\u8868\u793A\u7A7A\u7F3A\u6216\u8005\u672A\u521D\u59CB\u5316\uFF0C\u4ED6\u4EEC\u5206\u522B\u662F null \u548C undefined \u3002 TypeScript \u6709\u4E24\u4E2A\u5BF9\u5E94\u7684\u540C\u540D\u7C7B\u578B\u3002\u5B83\u4EEC\u7684\u884C\u4E3A\u53D6\u51B3\u4E8E\u662F\u5426\u6253\u5F00\u4E86 strictNullChecks \u9009\u9879\u3002</p><h3 id="strictnullchecks-\u5173\u95ED" tabindex="-1"><a class="header-anchor" href="#strictnullchecks-\u5173\u95ED" aria-hidden="true">#</a> strictNullChecks \u5173\u95ED</h3><p>\u5F53 strictNullChecks \u9009\u9879\u5173\u95ED\u7684\u65F6\u5019\uFF0C\u5982\u679C\u4E00\u4E2A\u503C\u53EF\u80FD\u662F null \u6216\u8005 undefined\uFF0C\u5B83\u4F9D\u7136\u53EF\u4EE5\u88AB\u6B63\u786E\u7684\u8BBF\u95EE\uFF0C\u6216\u8005\u88AB\u8D4B\u503C\u7ED9\u4EFB\u610F\u7C7B\u578B\u7684\u5C5E\u6027\u3002\u8FD9\u6709\u70B9\u7C7B\u4F3C\u4E8E\u6CA1\u6709\u7A7A\u503C\u68C0\u67E5\u7684\u8BED\u8A00 (\u6BD4\u5982 C# \uFF0CJava) \u3002\u8FD9\u4E9B\u68C0\u67E5\u7684\u7F3A\u5C11\uFF0C\u662F\u5BFC\u81F4 bug \u7684\u4E3B\u8981\u6E90\u5934\uFF0C\u6240\u4EE5\u6211\u4EEC\u59CB\u7EC8\u63A8\u8350\u5F00\u53D1\u8005\u5F00\u542F strictNullChecks \u9009\u9879\u3002</p><h3 id="strictnullchecks-\u6253\u5F00" tabindex="-1"><a class="header-anchor" href="#strictnullchecks-\u6253\u5F00" aria-hidden="true">#</a> strictNullChecks \u6253\u5F00</h3><p>\u5F53 strictNullChecks \u9009\u9879\u6253\u5F00\u7684\u65F6\u5019\uFF0C\u5982\u679C\u4E00\u4E2A\u503C\u53EF\u80FD\u662F null \u6216\u8005 undefined\uFF0C\u4F60\u9700\u8981\u5728\u7528\u5B83\u7684\u65B9\u6CD5\u6216\u8005\u5C5E\u6027\u4E4B\u524D\uFF0C\u5148\u68C0\u67E5\u8FD9\u4E9B\u503C\uFF0C\u5C31\u50CF\u7528\u53EF\u9009\u7684\u5C5E\u6027\u4E4B\u524D\uFF0C\u5148\u68C0\u67E5\u4E00\u4E0B \u662F\u5426\u662F undefined \uFF0C\u6211\u4EEC\u4E5F\u53EF\u4EE5\u4F7F\u7528\u7C7B\u578B\u6536\u7A84\uFF08narrowing\uFF09\u68C0\u67E5\u503C\u662F\u5426\u662F null\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">doSomething</span><span class="token punctuation">(</span>x<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>x <span class="token operator">===</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// do nothing</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;Hello, &quot;</span> <span class="token operator">+</span> x<span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h3 id="\u975E\u7A7A\u65AD\u8A00\u64CD\u4F5C\u7B26-\u540E\u7F00-non-null-assertion-operator" tabindex="-1"><a class="header-anchor" href="#\u975E\u7A7A\u65AD\u8A00\u64CD\u4F5C\u7B26-\u540E\u7F00-non-null-assertion-operator" aria-hidden="true">#</a> \u975E\u7A7A\u65AD\u8A00\u64CD\u4F5C\u7B26\uFF08\u540E\u7F00!\uFF09(Non-null Assertion Operator)</h3><p>TypeScript \u63D0\u4F9B\u4E86\u4E00\u4E2A\u7279\u6B8A\u7684\u8BED\u6CD5\uFF0C\u53EF\u4EE5\u5728\u4E0D\u505A\u4EFB\u4F55\u68C0\u67E5\u7684\u60C5\u51B5\u4E0B\uFF0C\u4ECE\u7C7B\u578B\u4E2D\u79FB\u9664 null \u548C undefined\uFF0C\u8FD9\u5C31\u662F\u5728\u4EFB\u610F\u8868\u8FBE\u5F0F\u540E\u9762\u5199\u4E0A ! \uFF0C\u8FD9\u662F\u4E00\u4E2A\u6709\u6548\u7684\u7C7B\u578B\u65AD\u8A00\uFF0C\u8868\u793A\u5B83\u7684\u503C\u4E0D\u53EF\u80FD\u662F null \u6216\u8005 undefined\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">liveDangerously</span><span class="token punctuation">(</span>x<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">number</span> <span class="token operator">|</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// No error</span>
  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>x<span class="token operator">!</span><span class="token punctuation">.</span><span class="token function">toFixed</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h3 id="\u679A\u4E3E-enums" tabindex="-1"><a class="header-anchor" href="#\u679A\u4E3E-enums" aria-hidden="true">#</a> \u679A\u4E3E\uFF08Enums\uFF09</h3><p>\u679A\u4E3E\u662F TypeScript \u6DFB\u52A0\u7684\u65B0\u7279\u6027\uFF0C\u7528\u4E8E\u63CF\u8FF0\u4E00\u4E2A\u503C\u53EF\u80FD\u662F\u591A\u4E2A\u5E38\u91CF\u4E2D\u7684\u4E00\u4E2A\u3002\u4E0D\u540C\u4E8E\u5927\u90E8\u5206\u7684 TypeScript \u7279\u6027\uFF0C\u8FD9\u5E76\u4E0D\u662F\u4E00\u4E2A\u7C7B\u578B\u5C42\u9762\u7684\u589E\u91CF\uFF0C\u800C\u662F\u4F1A\u6DFB\u52A0\u5230\u8BED\u8A00\u548C\u8FD0\u884C\u65F6\u3002\u56E0\u4E3A\u5982\u6B64\uFF0C\u4F60\u5E94\u8BE5\u4E86\u89E3\u4E0B\u8FD9\u4E2A\u7279\u6027\u3002\u4F46\u662F\u53EF\u4EE5\u7B49\u4E00\u7B49\u518D\u7528\uFF0C\u9664\u975E\u4F60\u786E\u5B9A\u8981\u4F7F\u7528\u5B83\u3002\u4F60\u53EF\u4EE5\u5728\u679A\u4E3E\u7C7B\u578B\u9875\u9762\u4E86\u89E3\u66F4\u591A\u7684\u4FE1\u606F\u3002</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">enum</span> Tristate <span class="token punctuation">{</span>
  False<span class="token punctuation">,</span>
  True<span class="token punctuation">,</span>
  Unknown
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>\u5176\u88AB\u7F16\u8BD1\u6210 JavaScript \u540E\u5982\u4E0B\u6240\u793A\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">var</span> Tristate<span class="token punctuation">;</span>
<span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span>Tristate<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  Tristate<span class="token punctuation">[</span><span class="token punctuation">(</span>Tristate<span class="token punctuation">[</span><span class="token string">&#39;False&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&#39;False&#39;</span><span class="token punctuation">;</span>
  Tristate<span class="token punctuation">[</span><span class="token punctuation">(</span>Tristate<span class="token punctuation">[</span><span class="token string">&#39;True&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&#39;True&#39;</span><span class="token punctuation">;</span>
  Tristate<span class="token punctuation">[</span><span class="token punctuation">(</span>Tristate<span class="token punctuation">[</span><span class="token string">&#39;Unknown&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&#39;Unknown&#39;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span>Tristate <span class="token operator">||</span> <span class="token punctuation">(</span>Tristate <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h3 id="bigint" tabindex="-1"><a class="header-anchor" href="#bigint" aria-hidden="true">#</a> bigint</h3><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> oneHundred<span class="token operator">:</span>bigint <span class="token operator">=</span> <span class="token function">BigInt</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span>

<span class="token keyword">const</span> anotherHundred<span class="token operator">:</span>bigint <span class="token operator">=</span> <span class="token number">100n</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="symbol" tabindex="-1"><a class="header-anchor" href="#symbol" aria-hidden="true">#</a> symbol</h3><p>\u8FD9\u4E5F\u662F JavaScript \u4E2D\u7684\u4E00\u4E2A\u539F\u59CB\u7C7B\u578B\uFF0C\u901A\u8FC7\u51FD\u6570 Symbol()\uFF0C\u6211\u4EEC\u53EF\u4EE5\u521B\u5EFA\u4E00\u4E2A\u5168\u5C40\u552F\u4E00\u7684\u5F15\u7528\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> firstName <span class="token operator">=</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> secondName <span class="token operator">=</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div>`,59);function t(e,o){return p}var u=s(a,[["render",t]]);export{u as default};
